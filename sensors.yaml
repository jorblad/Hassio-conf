#YR weather sensor
#  - platform: yr
#    monitored_conditions:
#      - temperature
#      - symbol
#      - windSpeed
#      - windDirection
#      - humidity
#      - fog
#      - cloudiness
#      - lowClouds
#      - mediumClouds
#      - highClouds
#      - dewpointTemperature

#Actual rflink sensors
- platform: rflink
  devices:
    oregontemphygro_228ec_temp:
      sensor_type: temperature
    oregontemphygro_228ec_hum:
      sensor_type: humidity
    oregontemphygro_228ec_bat:
      sensor_type: battery
  automatic_add: true

#  - platform: vasttrafik
#    key: !secret vasttrafik_key
#    secret: !secret vasttrafik_secret
#    departures:
#      - from: Borås Resecentrum
#        name: Mot Göteborg
#        heading: Korsvägen

#Pollen nivå
#- platform: pollenniva
#  scan_interval: 4
#  sensors:
#    - city: Göteborg
#      days_to_track: 3
#      allergens:
#        - Hassel
#        - Gräs
#        - Alm
#        - Björk
#        - Bok
#        - Ek
#        - Gråbo
#    - city: Jönköping
#     days_to_track: 3
#      allergens:
#       - Hassel
#       - Gräs
#       - Alm
#        - Björk
#        - Ek
#        - Gråbo

#HarmonyHub
#- platform: template
#  sensors:
#    vardagsrum:
#      value_template: "{{ states.remote.vardagsrumtv.attributes.current_activity }}"
#      friendly_name: "Vardagsrum HarmonyHub"

#IP-dns
# Own public IPv4 address
- platform: dnsip
  hostname: myip.opendns.com
# Resolve IP address of home-assistant.io via Google DNS
- platform: dnsip
  hostname: !secret hostname
  name: hass

#System
- platform: systemmonitor
  resources:
    - type: disk_use_percent
      arg: /
    - type: memory_free
    - type: processor_use
    - type: last_boot

#Unifi security gateway
#  - platform: unifigateway
#    host: !secret unifi_host
#    username: !secret unifi_username
#    password: !secret unifi_password
#   site_id: !secret unifi_site_id
#    monitored_conditions:
#      - www
#      - wlan
#      - alerts
#      - firmware
#      - vpn
#      - lan

#Krisinfo
- platform: krisinformation
  name: "Krisinformation Borås"
  county: "Västra Götalands län"
  latitude: !secret latitude
  longitude: !secret longitude
  radius: 200

#Here travel time
# Tracking entity to entity
- platform: here_travel_time
  api_key: !secret here_api_key
  name: Samuel hem
  origin_entity_id: person.samuel_sjobergsson
  destination_entity_id: zone.home
  mode: car
  route_mode: fastest
  traffic_mode: true
  unit_system: metric

# Tracking entity to entity
- platform: here_travel_time
  api_key: !secret here_api_key
  name: Samuel till jobb
  origin_entity_id: person.samuel_sjobergsson
  destination_entity_id: zone.jobb
  mode: car
  route_mode: fastest
  traffic_mode: true
  unit_system: metric
#Alarm
- platform: time_date
  display_options:
    - "date_time"
    - "time"
    - "date"

#Transportstyrelsen
- platform: trafikverket_weatherstation
  name: Transportstyrelsen Sörbo
  api_key: !secret transportstyrelsen
  station: Sörbo2
  monitored_conditions:
    - air_temp
    - road_temp
    - humidity
    - precipitation
    - wind_direction
    - wind_direction_text
    - wind_speed
    - wind_speed_max
    - precipitation_amount
    - precipitation_amountname

- platform: trafikverket_weatherstation
  name: Transportstyrelsen Viared
  api_key: !secret transportstyrelsen
  station: Viared
  monitored_conditions:
    - air_temp
    - road_temp
    - humidity
    - precipitation
    - wind_direction
    - wind_direction_text
    - wind_speed
    - wind_speed_max
    - precipitation_amount
    - precipitation_amountname

#Waze travel time
- platform: waze_travel_time
  name: Samuel hem
  origin: person.samuel_sjobergsson
  destination: zone.home
  region: "EU"

- platform: waze_travel_time
  name: Samuel till jobb
  origin: person.samuel_sjobergsson
  destination: zone.jobb
  region: "EU"

#Bibeln
- platform: scrape
  resource: https://sjobergssonsteknik.se/dagens-bibelord/
  name: Dagens bibelord
  select: "bibel_ord"
  scan_interval: 7200

#Greenely
- platform: greenely
  email: !secret greenely_email
  password: !secret greenely_password

#From matt8707
#Elpris
- platform: scrape
  resource: https://elen.nu/dagens-spotpris/se3-stockholm/
  name: Aktuellt spotpris
  select: "div.ml-2.flex-grow > div:nth-child(2) > span"
  value_template: "{{ ((value.split(' ')[0]) | replace (',', '.')) }}"
  unit_of_measurement: öre/kWh
  scan_interval: 1800
#Covid19
- platform: rest
  name: covid_19_folkhalsomyndigheten
  resource: https://www.arcgis.com/sharing/rest/content/items/2dc63e26f509468f896ec69476b0dab3/data
  value_template: "{{ 'Otillgänglig' if value_json.embedCode == '' else 'Tillgänglig' }}"
  json_attributes_path: $.widgets.widget_1.config
  json_attributes: [embedCode]
  scan_interval: 21600
#Hass release notes
- platform: rest
  name: hass_release_notes
  resource: https://api.github.com/repos/home-assistant/core/releases/latest
  value_template: "{{ value_json.name }}"
  json_attributes: [body]
  scan_interval: 21600
#Hass rc release notes
- platform: rest
  name: hass_release_notes_rc
  resource: https://api.github.com/repos/home-assistant/core/releases?per_page=1
  value_template: "{{ value_json[0].name }}"
  json_attributes: [body]
  scan_interval: 21600

- platform: version
  name: hass_version_installed

- platform: version
  name: hass_version_latest
  source: docker

- platform: version
  name: hass_version_latest_beta
  beta: true
  source: docker

- platform: uptime
  unit_of_measurement: minutes

- platform: filesize
  file_paths:
    - /config/home-assistant_v2.db
    - /config/home-assistant.log

#- platform: rest
#  name: docker_cpu
#  resource: !secret ha_dockermon_cpu
#  value_template: >
#    {% set cpuDelta = value_json.cpu_stats.cpu_usage.total_usage - value_json.precpu_stats.cpu_usage.total_usage %}
#    {% set systemDelta = value_json.cpu_stats.system_cpu_usage - value_json.precpu_stats.system_cpu_usage %}
#    {{ (cpuDelta / systemDelta * value_json.cpu_stats.cpu_usage.percpu_usage | length * 100) | round(1) }}
#  json_attributes: ["cpu_stats", "precpu_stats", "memory_stats"]

#- platform: rest
#  name: docker_uptime
#  resource: !secret ha_dockermon_uptime
#  value_template: >
#    {{ value_json.status.split(' ')[1:] | join(' ') | replace ('About a minute', '1 minut')
#    | replace ('About an hour', '1 timme')  | replace ('seconds', 'sekunder') | replace ('minutes', 'minuter')
#    | replace ('hours', 'timmar') | replace ('days', 'dagar') + ' sedan' }}

- platform: plex_recently_added
  token: !secret plex_token
  host: !secret plex_host
  port: !secret plex_port
  max: 1
  img_dir: "/"
  image_resolution: 500

- platform: command_line
  name: hacs_version
  scan_interval: 86400
  command:
    grep -oP 'VERSION = "\K[^"]+' custom_components/hacs/const.py

    ####################################################
    #                                                  #
    #                  Swedish holidays                #
    #                                                  #
    ####################################################
- platform: swedish_calendar
  special_themes_dir:
    /config/custom_components/swedish_calendar

    ####################################################
    #                                                  #
    #                     Feedparser                   #
    #                                                  #
    ####################################################
- platform: feedparser
  name: Quote of the Day
  feed_url: "https://www.brainyquote.com/link/quotebr.rss"
  date_format: "%a, %b %d %I:%M %p"

- platform: feedparser
  name: Bible trivia
  feed_url: "https://www.theverseoftheday.info/rss/Bible-trivia"
  date_format: "%a, %b %d %I:%M %p"

- platform: feedparser
  name: Verse of the day
  feed_url: "https://www.theverseoftheday.info/rss/the-verse-of-the-day"
  date_format: "%a, %b %d %I:%M %p"

- platform: feedparser
  name: dagens citat
  feed_url: "https://www.dagenscitat.nu/rss.xml"
  date_format:
    "%a, %b %d %I:%M %p"

    ####################################################
    #                                                  #
    #                     TEMPLATE                     #
    #                                                  #
    ####################################################

    ####################################################
    #                                                  #
    #                     Sidebar                      #
    #                                                  #
    ####################################################
- platform: template
  sensors:
    sidebar_greeting:
      value_template: >
        {% set time = now().hour %}
        {% if time <= 1 %} God natt {{'\U0001F611'}}
        {% elif time <= 3 %} God natt {{'\U0001F62A'}}
        {% elif time <= 5 %} God natt {{'\U0001F634'}}
        {% elif time <= 7 %} God morgon {{'\U0001F4A9'}}
        {% elif time <= 9 %} God morgon {{'\u2615\uFE0F'}}
        {% elif time <= 10 %} God morgon {{'\U0001F642'}}
        {% elif time <= 13 %} God dag {{'\U0001F60A'}}
        {% elif time <= 15 %} God dag {{'\U0001F60E'}}
        {% elif time <= 17 %} God dag {{'\U0001F44B\U0001F3FB'}}
        {% elif time <= 19 %} God kväll {{'\U0001F44B\U0001F3FB'}}
        {% elif time <= 22 %} God kväll {{'\U0001F60C'}}
        {% elif time <= 23 %} God kväll {{'\U0001F974'}}
        {% else %} God kväll {{'\U0001F974'}}
        {% endif %}

    #Sidebar active
    sidebar_active:
      value_template: >
        {% set lights = [states.light.bedroom_lamp_samuel, states.light.dining_room_wall_light, states.light.downstairs_lights, states.light.kitchen_window, states.light.living_room_front, states.light.living_room_side, states.light.office_wall_lights, states.light.server_corner, states.light.tv_room_led_slinga] %}
        {% set lights_on = lights | selectattr('state','eq','on') | list %}
        {% set lights_name = lights | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}
        {% set switches = [states.switch.tradfri_outlet, states.switch.tradfri_outlet_2] %}
        {% set switches_on = switches | selectattr('state','eq','on') | list %} 
        {% set switches_name = switches | selectattr('state','eq','on') | map(attribute='name') | join(', ') %}
        {% if (lights_on | length == 0) and (switches_on | length > 0) %} 
        {{ switches_name | regex_replace(',([^,]*)$',' och\\1') }} är på
        {% elif (lights_on | length == 1) and (switches_on | length == 1) %}
        {{ lights_name }} och {{switches_name }} är på
        {% elif (lights_on | length == 1) and (switches_on | length > 1) %}
        {{ lights_name }}, {{ switches_name | regex_replace(',([^,]*)$',' och\\1') }} är på
        {% elif (lights_on | length > 1) and (switches_on | length == 1) %}
        {{ lights_on | length }} lampor och {{ switches_name }} är på
        {% elif (lights_on | length > 1) and (switches_on | length > 1) %}
        {{ lights_on | length }} lampor, {{ switches_name | regex_replace(',([^,]*)$',' och\\1') }} är på
        {% elif (lights_on | length == 1) and (switches_on | length == 0) %}
        {{ lights_name }} är på
        {% elif (lights_on | length > 1) and (switches_on | length == 0) %}
        {{ lights_on | length}} lampor är på
        {% else %} 
        <font color='#6a7377'>Allt är avstängt</font> 
        {% endif %}

    sidebar_weather:
      value_template: >
        {% set temperature = states('sensor.oregontemphygro_228ec_temp') %}
        {% set apparent = states('sensor.heat_index_1') | round %}
        {% set precip = states('sensor.weather_precprob') | round %}
        {% if not is_state('sensor.oregontemphygro_228ec_temp', 'unknown') %}
          {% if temperature | float <= 0.0 %}
            Känns som {{ apparent }}° med 
            {{ precip }}% risk för snö {{'\u2744\uFE0F'}}
          {% elif temperature | float > 0.0 %} 
            Känns som {{ apparent}}° med 
            {{ precip }}% risk för regn {{ '\u2614\uFE0F' if precip > 30 }}
          {% endif %}
        {% else %}
          Kan inte läsa in väderinformation...
        {% endif %}

    sidebar_day:
      icon_template: mdi:calendar
      value_template: >
        {% set days = ['Måndag', 'Tisdag', 'Onsdag', 'Torsdag', 'Fredag', 'Lördag', 'Söndag'] %}
        {{ days[now().weekday()] }}
    sidebar_date:
      icon_template: mdi:calendar
      value_template: >
        {% set months = ['Januari', 'Februari', 'Mars', 'April', 'Maj', 'Juni', 
        'Juli', 'Augusti', 'September', 'Oktober', 'November', 'December'] %}
        {{ strptime(states('sensor.date'), '%Y-%m-%d').day }} {{ months[now().month-1] }}

    sidebar_dagenscitat:
      friendly_name: Dagens citat
      value_template: "{{ states.sensor.dagens_citat.attributes.entries[0].summary }}"

    garbage_disposal:
      friendly_name: Soptömning
      icon_template: mdi:calendar
      value_template: >
        {% set start_time = state_attr('calendar.garbage_collection', 'start_time') %}
        {% if start_time != None %}
          {% set time = as_timestamp(start_time) | timestamp_custom('%H:%M') %}
          {% set hours = as_timestamp(start_time) | timestamp_custom('%H') | int / 24 %}
          {% set count = (as_timestamp(start_time) - as_timestamp(now())) / 86400 - hours %}
          {% set day = strptime(start_time, '%Y-%m-%d %H:%M:%S').strftime('%A') 
          | replace('Monday', 'måndag')
          | replace('Tuesday', 'tisdag')
          | replace('Wednesday', 'onsdag')
          | replace('Thursday', 'torsdag')
          | replace('Friday', 'fredag')
          | replace('Saturday', 'lördag')
          | replace('Sunday', 'söndag') %}
          {% if count <= 0.0 %}
            {{'♻️'}} Soptömning idag
          {% elif count <= 1.0 %}
            Soptömning imorgon
          {% elif count <= 2.0 %}
            Soptömning i övermorgon
          {% else %}
            Soptömning om {{ (count + hours) | round }} dagar på {{ day }}
          {% endif %}
        {% endif %}

    ####################################################
    #                                                  #
    #                     Updates                      #
    #                                                  #
    ####################################################
    hass_version:
      icon_template: mdi:home-assistant
      friendly_name_template: >
        Installerad {{ states('sensor.hass_version_installed') }}
      value_template: >
        {{ 'Senaste' if states('sensor.hass_version_installed') == 
        states('sensor.hass_version_latest') else states('sensor.hass_version_latest') }}

    hass_dev_release:
      icon_template: mdi:dev-to
      friendly_name_template: >
        {% if ((as_timestamp(state_attr('calendar.home_assistant_devs',
        'start_time')) - as_timestamp(now())) / 86400) > 20 %}
          Planerad beta
        {% else %}
          {{ state_attr('calendar.home_assistant_devs','message') }}
        {% endif %}
      value_template: >
        {% set dev = ((as_timestamp(state_attr('calendar.home_assistant_devs',
        'start_time')) - as_timestamp(now())) / 86400) %}
         {% if dev < -1 %} Släppt
         {% elif dev < 0 %} Idag
         {% elif dev < 1 %} Imorgon
         {% elif dev > 20 %} Ingen
         {% else %} {{ dev | int + 1 }} dagar
        {% endif %}

    placeholder:
      value_template: " "

    ####################################################
    #                                                  #
    #                     Weather                      #
    #                                                  #
    ####################################################
    weather_precprob:
      value_template: >
        {% if state_attr('weather.smedsas_skogslund', 'forecast')[0].precipitation_probability is defined %}
        {{ state_attr('weather.smedsas_skogslund', 'forecast')[0].precipitation_probability }}
        {% else %}
        0
        {% endif %}

    heat_index_1:
      friendly_name: "Känns som"
      #formula taken from https://www.wpc.ncep.noaa.gov/html/heatindex_equation.shtml
      value_template: >-
        {% set T = ((states.sensor.oregontemphygro_228ec_temp.state|float)*1.8)+32 %}
        {% set RH = states.sensor.oregontemphygro_228ec_hum.state|float %}

        {% set STEADMAN_HI = 0.5 * (T + 61.0 + ((T-68.0)*1.2) + (RH*0.094)) %}

        {% if STEADMAN_HI >= 80 %}

          {% set ROTHFUSZ_HI = -42.379 + 2.04901523*T + 10.14333127*RH - 0.22475541*T*RH - 0.00683783*T*T - 0.05481717*RH*RH + 0.00122874*T*T*RH + 0.00085282*T*RH*RH - 0.00000199*T*T*RH*RH %}
          
          {% set HI = ROTHFUSZ_HI %}

          {% if RH < 13 and 80 < T < 112 %}
            {% set ADJUSTMENT = ((13-RH)/4)*((17-(T-95)|abs)/17)**0.5 %}
            {% set HI = HI - ADJUSTMENT %}
          {% elif RH > 85 and 80 < T < 87 %}
            {% set ADJUSTMENT = ((RH-85)/10) * ((87-T)/5) %}
            {% set HI = HI + ADJUSTMENT %}
          {% endif %}
          
        {% else %}
          {% set HI = STEADMAN_HI %}
        {% endif %}

        {% set HI_C = (HI-32)/1.8 %}

        {{- HI_C|round(1) -}}
      unit_of_measurement: "°C"

    ####################################################
    #                                                  #
    #                     System                       #
    #                                                  #
    ####################################################
    hass_uptime:
      friendly_name: Senast omstart
      icon_template: mdi:update
      value_template: >
        {% set uptime = states('sensor.uptime') | float %}
        {% if uptime < 1 %} {{ (uptime * 60) | int }} sekunder sedan
        {% elif uptime | int == 1 %} 1 minut sedan
        {% elif uptime | int > 1 %}
          {% if uptime | int < 60 %} {{ uptime | int }} minuter sedan
          {% elif uptime | int / 60 == 24 %} {{ (uptime | int / 60 / 24) | int }} dag sedan
          {% elif uptime | int / 60 >= 24 %} {{ (uptime | int / 60 / 24) | int }} dagar sedan
          {% elif uptime | int >= 60 and uptime | int < 120 %} {{ (uptime | int / 60) | int }} timme sedan
          {% elif uptime | int >= 120 %} {{ (uptime | int / 60) | int }} timmar sedan
          {% endif %}
        {% endif %}

    #dockermon_mem:
    #friendly_name: Minne
    #icon_template: mdi:memory
    #value_template: >
    #{% set entity_id = 'sensor.docker_cpu' %}
    #{{ (state_attr(entity_id, 'memory_stats')['usage'] /
    #state_attr(entity_id, 'memory_stats')['limit'] * 100) | round(1) | default(0) }}

    esxi_cpu_percent:
      friendly_name: ESXi host CPU
      icon_template: mdi:cpu-64-bit
      value_template: >
        {{ (state_attr('sensor.esxi_vmhost_esxi01_man_st_lan', 'cpuusage_ghz') / 
        state_attr('sensor.esxi_vmhost_esxi01_man_st_lan', 'cputotal_ghz') * 100) | round(1) | default(0) }}

    esxi_memory_percent:
      friendly_name: ESXi host minne
      icon_template: mdi:memory
      value_template: >
        {{ (state_attr('sensor.esxi_vmhost_esxi01_man_st_lan', 'memusage_gb') / 
        state_attr('sensor.esxi_vmhost_esxi01_man_st_lan', 'memtotal_gb') * 100) | round(1) | default(0) }}

    esxi_disk_free_total:
      friendly_name: ESXi host disk användning
      icon_template: mdi:harddisk
      value_template: >
        {{ (float(states('sensor.esxi_datastore_media_a')) + float(states('sensor.esxi_datastore_media_b'))) | round(2)}}

    esxi_disk_size_media_a:
      friendly_name: ESXi disk size media-a
      icon_template: mdi:harddisk
      value_template: >
        {{ (state_attr('sensor.esxi_datastore_media_a', 'total_space_gb'))}}

    esxi_disk_size_media_b:
      friendly_name: ESXi disk size media-b
      icon_template: mdi:harddisk
      value_template: >
        {{ (state_attr('sensor.esxi_datastore_media_b', 'total_space_gb'))}}

    esxi_disk_size_total:
      friendly_name: ESXi host disk size
      icon_template: mdi:harddisk
      value_template: >
        {{ (float(states('sensor.esxi_disk_size_media_a')) + float(states('sensor.esxi_disk_size_media_a'))) | round(2)}}

    esxi_disk_use_percent:
      friendly_name: ESXi host disk användning
      icon_template: mdi:harddisk
      value_template: >
        {{ 100 - ((float(states('sensor.esxi_disk_free_total')) /
        float(states('sensor.esxi_disk_size_total')) * 100)) | round(1) | default(0) }}

    tpl_occupancy:
      friendly_name: Någon hemma?
      icon_template: >-
        {% if is_state('binary_sensor.tpl.occypancy','on') %}
          mdi:home-account
        {% else %}
          mdi:home-outline
        {% endif %}
      value_template: "{{ is_state('person.samuel_sjobergsson','home')  or is_state('input_boolean.guest_mode','on')}}"

    ####################################################
    #                                                  #
    #                     Alarm                        #
    #                                                  #
    ####################################################
    before_alarm:
      friendly_name: Innan alarm
      icon_template: mdi:alarm
      value_template: "{{ (as_timestamp(states.sensor.samuels_oneplus_next_alarm.state)-1*60) | timestamp_custom('%Y-%m-%d, %H:%M') }}"

    next_alarm_time:
      friendly_name: Tid för nästa alarm
      icon_template: mdi:alarm
      value_template: "{{ as_timestamp(states.sensor.samuels_oneplus_next_alarm.state) | timestamp_custom('%H:%M') }}"

    dagar_till_soptomning:
      friendly_name: Dagar till soptömning
      icon_template: >-
        {% if is_state('sensor.dagar_till_soptomning','0') %}
          mdi:delete-empty
        {% else %}
          mdi:trash-can
        {% endif %}
      value_template: "{{ state_attr('sensor.soptomning', 'days') }}"

    ####################################################
    #                                                  #
    #                     Media                        #
    #                                                  #
    ####################################################
    trakt_upcoming_title:
      value_template: >
        {% set value_json = states.sensor.trakt_upcoming_calendar.attributes.data %}
        {{ (value_json | from_json)[1].title }} {{ (value_json | from_json)[1].number }}
    trakt_upcoming_fanart:
      value_template: >
        {% set value_json = states.sensor.trakt_upcoming_calendar.attributes.data %}
        {{ (value_json | from_json)[1].fanart }}
